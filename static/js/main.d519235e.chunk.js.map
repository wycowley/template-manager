{"version":3,"sources":["firebase.js","components/SignIn.jsx","components/NavBar.jsx","components/FolderViewer.jsx","pages/Dashboard.jsx","pages/Download.jsx","pages/Create.jsx","components/DisplayFile.jsx","pages/Edit.jsx","pages/App.js","reportWebVitals.js","index.js"],"names":["initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","GoogleAuthProvider","auth","getAuth","SignIn","props","useState","redirect","changeRedirect","onClick","signInWithPopup","then","result","credentialFromResult","accessToken","user","catch","error","code","message","email","credentialFromError","to","NavBar","history","useHistory","useAuthState","loading","className","style","color","signOut","push","undefined","src","photoURL","FolderViewer","date","changeDate","useEffect","console","log","timestamp","toDate","split","name","id","width","height","fill","userId","url","navigator","clipboard","writeText","db","getFirestore","Dashboard","totalData","setData","a","userRef","doc","uid","q","query","collection","orderBy","getDocs","querySnapshot","temporaryData","forEach","data","retrieveFirebaseFiles","Object","keys","map","useParams","setTotalData","folderRef","getDoc","totalDataTemporary","getFirebaseData","FileSaver","require","blob","Blob","type","saveAs","Create","userDocument","setDoc","displayName","addDoc","owner","documentReference","setDocument","DisplayFile","updateTitle","setUpdateTitle","localTitle","setLocalTitle","enteredValue","setValue","value","onChange","event","target","onTitleChange","newValue","onDataChange","theme","editorProps","$blockScrolling","Edit","folderTitle","setFolderTitle","saMPle","mainDocRef","setDocRef","changesPrompt","setChanges","changeFolderTitle","setChangeFolderTitle","visibleFile","setVisible","mainDocData","x","updateLocallyForSelected","copy","localDocument","updateTimestamp","updateDoc","serverTimestamp","updateSingularDocument","otherDoc","updateFolderTitleServer","getDataFromFirestore","window","addEventListener","returnValue","preventDefault","marginLeft","item","newId","Math","random","marginBottom","newTitle","object","newData","label","filename","exportFile","textDecoration","App","path","Download","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAcYA,YAXW,CACnBC,OAAQ,0CACRC,WAAY,yCACZC,UAAW,yBACXC,cAAe,qCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iB,sCCNbC,EAAW,IAAIC,IACfC,EAAOC,cA2BEC,EAzBA,SAACC,GACZ,MAAmCC,oBAAS,GAA5C,mBAAOC,EAAP,KAAiBC,EAAjB,KAiBA,OACI,gCACI,wBAAQC,QAlBhB,WACIC,YAAgBR,EAAMF,GACjBW,MAAK,SAACC,GACgBX,IAAmBY,qBAAqBD,GAClCE,YACZF,EAAOG,KAEpBP,GAAe,MAElBQ,OAAM,SAACC,GACcA,EAAMC,KACHD,EAAME,QACbF,EAAMG,MACDnB,IAAmBoB,oBAAoBJ,OAK9D,iCACCV,EAAW,cAAC,IAAD,CAAUe,GAAG,eAA2B,iC,QCpB1DpB,G,MAAOC,eAuCEoB,EAtCA,SAAClB,GACZ,IAAImB,EAAUC,cACd,EAA+BC,YAAaxB,GAA5C,mBAAOa,EAAP,KAAaY,EAAb,UAWA,OACI,sBAAKC,UAAU,UAAf,UACI,cAAC,IAAD,CAAUA,UAAU,SACpB,kDACA,cAAC,IAAD,CAAMN,GAAG,aAAaO,MAAO,CAAEC,MAAO,SAAtC,SACI,wCAEJ,cAAC,IAAD,CAAMR,GAAG,UAAUO,MAAO,CAAEC,MAAO,SAAnC,SACI,8CAEJ,sBAAKF,UAAU,kBAAf,UACI,wBAAQnB,QApBpB,WACIsB,YAAQ7B,GACHS,MAAK,WACFa,EAAQQ,KAAK,cAEhBhB,OAAM,SAACC,QAe0BW,UAAU,WAAxC,SACI,oBAAIA,UAAU,iBAAd,wBAEFD,QAAmBM,GAARlB,EAKT,6BAJA,qBAAKa,UAAU,wBAAf,SACI,qBAAKM,IAAKnB,EAAKoB,SAAUP,UAAU,2B,+CCC5CQ,EAnCM,SAAC/B,GAClB,MAA2BC,mBAAS,cAApC,mBAAO+B,EAAP,KAAaC,EAAb,KAcA,OAbAC,qBAAU,WACNC,QAAQC,IAAIpC,EAAMqC,UAAUC,UAC5B,IAAIN,EAAOhC,EAAMqC,UAAUC,SAAW,GACtCN,EAAOA,EAAKO,MAAM,KAClBJ,QAAQC,IAAIJ,GACZA,EAAOA,EAAK,GAAK,IAAMA,EAAK,GAAK,IAAMA,EAAK,GAC5CC,EAAWD,KACZ,IAOC,sBAAKT,UAAU,0BAAf,UACI,sBAAKA,UAAU,YAAf,UACI,mBAAGA,UAAU,eAAb,SAA6BvB,EAAMwC,OACnC,cAAC,IAAD,CAAMvB,GAAI,SAAWjB,EAAMyC,GAAIlB,UAAU,YAAzC,SACI,cAAC,IAAD,CAAQC,MAAO,CAAEkB,MAAO,OAAWC,OAAQ,OAAWC,KAAM,0BAGpE,4BAAI,eAAiBZ,IACrB,sBAAKT,UAAU,WAAf,UACI,cAAC,IAAD,CAAMN,GAAI,aAAejB,EAAMyC,GAAK,IAAMzC,EAAM6C,OAAhD,SACI,wBAAQtB,UAAU,gBAAlB,kCAEJ,wBAAQA,UAAU,gBAAgBnB,QAlB9C,WACI,IAAI0C,EAAM,2DACVA,EAAMA,EAAM9C,EAAMyC,GAAK,IAAMzC,EAAM6C,OACnCE,UAAUC,UAAUC,UAAUH,IAetB,uCCvBVjD,G,MAAOC,eACPoD,EAAKC,cA+BIC,EA9BG,SAACpD,GACf,MAA+BqB,YAAaxB,GAA5C,mBAAOa,EAAP,KAAaY,EAAb,KACA,GADA,KAC6BrB,mBAAS,KAAtC,mBAAOoD,EAAP,KAAkBC,EAAlB,KAFyB,4CAQzB,kCAAAC,EAAA,6DACUC,EAAUC,YAAIP,EAAI,QAASxC,EAAKgD,KAChCC,EAAIC,YAAMC,YAAWL,EAAS,WAAYM,YAAQ,YAAa,SAFzE,SAGgCC,YAAQJ,GAHxC,OAGUK,EAHV,OAIUC,EAAgB,GACtBD,EAAcE,SAAQ,SAACT,GACnBQ,EAAcR,EAAIhB,IAAMgB,EAAIU,UAEhChC,QAAQC,IAAI6B,GACZX,EAAQW,GATZ,4CARyB,sBAmBzB,OAhBA/B,qBAAU,WACDZ,GAJgB,mCAKjB8C,KAEL,CAAC9C,IAaA,sBAAKC,UAAU,sBAAf,UACI,kDACA,qBAAKA,UAAU,mBAAf,SACK8C,OAAOC,KAAKjB,GAAWkB,KAAI,SAAC9B,GACzB,OAAO,cAAC,EAAD,CAAcD,KAAMa,EAAUZ,GAAID,KAAMC,GAAIA,EAAII,OAAQnC,EAAKgD,IAAKrB,UAAWgB,EAAUZ,GAAIJ,qB,QC7BhHa,G,MAAKC,eAwDIC,EAtDG,SAACpD,GACf,IAAMyC,EAAO+B,cAAP/B,GACAI,EAAW2B,cAAX3B,OACN,EAAsC5C,mBAAS,WAA/C,mBACA,GADA,UACkCA,mBAAS,KAA3C,mBAAOoD,EAAP,KAAkBoB,EAAlB,KAJyB,4CAUzB,oCAAAlB,EAAA,6DACUC,EAAUC,YAAIP,EAAI,QAASL,GAC3B6B,EAAYjB,YAAID,EAAS,UAAWf,GAF9C,SAGiCkC,YAAOD,GAHxC,qBAKUf,EAAIC,YAAMC,YAAWa,EAAW,UACtCvC,QAAQC,IAAIuB,GANhB,SAOgCI,YAAQJ,GAPxC,OAOUK,EAPV,OAQY,EACJY,EAAqB,GACzBZ,EAAcE,SAAQ,SAACT,GAEnBmB,EAAmBnB,EAAIhB,IAAMgB,EAAIU,OACjChC,QAAQC,IAAIqB,EAAIhB,GAAI,OAAQgB,EAAIU,WAGpCM,EAAaG,GACbzC,QAAQC,IAAI,aACZD,QAAQC,IAAIiB,GAlBhB,6CAVyB,sBAqCzB,OA/BAnB,qBAAU,WACNC,QAAQC,IAAIK,EAAII,GAPK,mCAQrBgC,KACD,IA6BC,gCACI,yFACA,cAAC,IAAD,CAAM5D,GAAG,QAAT,qCACCoD,OAAOC,KAAKjB,GAAWkB,KAAI,SAAC9B,GACzB,OACI,gCACI,4BAAIY,EAAUZ,GAAID,OAClB,+BAIZ,wBAAQpC,QAnBhB,WACI,IAAI0E,EAAYC,EAAQ,IACxBV,OAAOC,KAAKjB,GAAWa,SAAQ,SAACzB,GAC5B,IAAIuC,EAAO,IAAIC,KAAK,CAAC5B,EAAUZ,GAAI0B,MAAO,CAAEe,KAAM,6BAClDJ,EAAUK,OAAOH,EAAM,CAAC3B,EAAUZ,GAAID,WAetC,8BCrDNU,EAAKC,cA4BIiC,EA1BA,SAACpF,GACZ,IAAImB,EAAUC,cADQ,4CAOtB,WAA2BiE,GAA3B,eAAA9B,EAAA,sEACU+B,YAAOD,EAAc,CACvB3B,IAAK1D,EAAMU,KAAKgD,IAChB6B,YAAavF,EAAMU,KAAK6E,cAHhC,uBAMoCC,YAAO3B,YAAWwB,EAAc,WAAY,CACxE7C,KAAM,WACNiD,MAAOzF,EAAMU,KAAKgD,MAR1B,cAMUgC,EANV,gBAUuCJ,YAAO7B,YAAIiC,EAAmB,QAAS,0BAA2B,CACjGlD,KAAM,yBACN2B,KAAM,sBAZd,cAcIhC,QAAQC,IAAIsD,EAAkBjD,IAC9BtB,EAAQQ,KAAK,SAAW+D,EAAkBjD,IAf9C,6CAPsB,sBAwBtB,OAtBAP,qBAAU,WACNC,QAAQC,IAAIpC,EAAMU,KAAKgD,KAHL,oCAKlBiC,CADqBlC,YAAIP,EAAI,QAASlD,EAAMU,KAAKgD,QAElD,IAkBI,8B,0CCSIkC,G,YAhCK,SAAC5F,GACjB,MAAsCC,oBAAS,GAA/C,mBAAO4F,EAAP,KAAoBC,EAApB,KACA,EAAoC7F,mBAASD,EAAMwC,MAAnD,mBAAOuD,EAAP,KAAmBC,EAAnB,KACA,EAAiC/F,mBAASD,EAAMmE,MAAhD,mBAAO8B,EAAP,KAAqBC,EAArB,KAmBA,OAlBAhE,qBAAU,WACN8D,EAAchG,EAAMwC,MACpB0D,EAASlG,EAAMmE,QAChB,CAACnE,IAgBA,sBAAKuB,UAAU,wBAAf,UACMsE,EAA6D,uBAAOM,MAAOJ,EAAYK,SALjG,SAA4BC,GACxBL,EAAcK,EAAMC,OAAOH,QAIgG5E,UAAU,gBAAjH,oBAAIA,UAAU,aAAd,SAA4BvB,EAAMwC,OAClD,wBAAQpC,QAZhB,WACuB,GAAfyF,GACA7F,EAAMuG,cAAcR,GAExBD,GAAgBD,IAQwBtE,UAAU,oBAA9C,SACMsE,EAA8D,cAAC,IAAD,CAAQtE,UAAU,oBAAlE,cAAC,IAAD,CAAQA,UAAU,sBAEtC,cAAC,IAAD,CAAW6E,SAnBnB,SAAkBI,GACdN,EAASM,GACTxG,EAAMyG,aAAaD,IAiBgB7D,OAAO,MAAMD,MAAM,MAAMnB,UAAU,cAAcmF,MAAM,QAAQlE,KAAK,mBAAmB2D,MAAOF,EAAcU,YAAa,CAAEC,iBAAiB,UClBjL1D,EAAKC,cACLtD,EAAOC,cAyKE+G,EAvKF,SAAC7G,GACV,MAA+BqB,YAAaxB,GAA5C,mBAAOa,EAAP,KAAaY,EAAb,KACA,GADA,KACsCrB,mBAAS,eAA/C,mBAAO6G,EAAP,KAAoBC,EAApB,KACA,EAA6B9G,mBAAS,CAAE+G,OAAQ,CAAE7C,KAAM,GAAI3B,KAAM,MAAlE,mBAAOa,EAAP,KAAkBC,EAAlB,KACA,EAAgCrD,mBAAS,CAAEwC,GAAI,IAA/C,mBAAOwE,EAAP,KAAmBC,EAAnB,KACA,EAAoCjH,mBAAS,qBAA7C,mBAAOkH,EAAP,KAAsBC,EAAtB,KACA,EAAkDnH,oBAAS,GAA3D,mBAAOoH,EAAP,KAA0BC,EAA1B,KACA,EAAkCrH,mBAAS,CAAC,UAAW,CAAEkE,KAAM,mBAAoB3B,KAAM,gBAAzF,mBAAO+E,EAAP,KAAoBC,EAApB,KACM/E,EAAO+B,cAAP/B,GARc,4CA4BpB,oCAAAc,EAAA,6DACIpB,QAAQC,IAAI6E,GADhB,SAE8BtC,YAAOlB,YAAIA,YAAIP,EAAI,QAASxC,EAAKgD,KAAM,UAAWjB,IAFhF,cAEUgF,EAFV,OAGIV,EAAeU,EAAYtD,OAAO3B,MAC5BmB,EAAIC,YAAMC,YAAWJ,YAAIA,YAAIP,EAAI,QAASxC,EAAKgD,KAAM,UAAWjB,GAAK,UAC3EN,QAAQC,IAAIuB,GALhB,SAMgCI,YAAQJ,GANxC,OAMUK,EANV,OAOQ0D,EAAI,EACJ9C,EAAqB,GACzBZ,EAAcE,SAAQ,SAACT,GAEV,GAALiE,GACAF,EAAW,CAAC/D,EAAIhB,GAAIgB,EAAIU,SAE5BS,EAAmBnB,EAAIhB,IAAMgB,EAAIU,OACjChC,QAAQC,IAAIqB,EAAIhB,GAAI,OAAQgB,EAAIU,QAChCuD,OAEJpE,EAAQsB,GACRzC,QAAQC,IAAIiB,GAnBhB,6CA5BoB,sBA8DpB,SAASsE,IACL,IAAIC,EAAOvE,EACPwE,EAAgBD,EAAKL,EAAY,IACrCM,EAAc1D,KAAOoD,EAAY,GAAGpD,KACpC0D,EAAcrF,KAAO+E,EAAY,GAAG/E,KACpCoF,EAAKL,EAAY,IAAMM,EACvBvE,EAAQsE,GApEQ,SAyFLE,IAzFK,2EAyFpB,sBAAAvE,EAAA,sEACkCwE,YAAUd,EAAY,CAChD5E,UAAW2F,gBAFnB,cAII7F,QAAQC,IAAI,qBAJhB,4CAzFoB,+BA+GL6F,EA/GK,gFA+GpB,WAAsCxF,EAAI0D,GAA1C,eAAA5C,EAAA,6DACU2E,EAAWzE,YAAIwD,EAAY,QAASxE,GAD9C,SAEU6C,YAAO4C,EAAU,CACnB1F,KAAM2D,EAAM3D,KACZ2B,KAAMgC,EAAMhC,OAJpB,2CA/GoB,iCAsHLgE,IAtHK,2EAsHpB,sBAAA5E,EAAA,sEACUwE,YAAUd,EAAY,CACxBzE,KAAMsE,IAFd,4CAtHoB,sBA8HpB,OApHA5E,qBAAU,WACDZ,QAAmBM,GAARlB,IACZwG,EAAUzD,YAAIA,YAAIP,EAAI,QAASxC,EAAKgD,KAAM,UAAWjB,IACrDN,QAAQC,IAAI1B,EAAKgD,IAAKjB,GACtBN,QAAQC,IAAI6E,GAdA,mCAeZmB,MAEL,CAAC9G,IACJY,qBAAU,WACNmG,OAAOC,iBAAiB,gBAAgB,SAACjC,GAMrC,OAFAA,EAAMkC,YAAc,GACpBlC,EAAMmC,iBACC,sCAsGX,qCACI,sBAAKjH,UAAU,4BAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,uBACA,uBAEA,sBAAKA,UAAU,sBAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,cAAC,IAAD,CAAUC,MAAO,CAAEiH,WAAY,UAC7BpB,EAA2E,uBAAO9F,UAAU,sBAAsB6E,SAb5I,SAA2BC,GACvBU,EAAeV,EAAMC,OAAOH,QAYyIA,MAAOW,IAAlI,mBAAGvF,UAAU,sBAAb,SAAoCuF,IAC1D,wBAAQ1G,QApChC,WACSiH,GAGDc,IACAL,IAEAR,GAAqB,IALrBA,GAAqB,IAkCL,SAAyCD,EAAuE,cAAC,IAAD,CAAQ7F,MAAO,CAAEiH,WAAY,UAAhF,cAAC,IAAD,CAAQjH,MAAO,CAAEiH,WAAY,eAE7FpE,OAAOC,KAAKjB,GAAWkB,KAAI,SAACmE,GAAD,OACxB,wBAAQtI,QAAS,kBAtEbuI,EAsEsCD,EArE9DvG,QAAQC,IAAIuG,GACZhB,SACAH,EAAW,CAACmB,EAAOtF,EAAUsF,KAHjC,IAA4BA,GAsE6CpH,UAAU,aAA3D,SACI,sBAAMC,MAAO,CAAEC,MAAOiH,GAAQnB,EAAY,GAAK,OAAS,SAAxD,SAAoElE,EAAUqF,GAAMlG,eAIhG,wBAAQpC,QAlDxB,WACI,IAAIwH,EAAOvE,EACXuE,EAAqB,KAAhBgB,KAAKC,UAA0B,CAAErG,KAAM,yBAA0B2B,KAAM,kBAC5Eb,EAAQ,eAAKsE,IACbR,EAAW,mBA8C8B7F,UAAU,yBAAyBC,MAAO,CAAEsH,aAAc,SAAvF,sBAGA,wBAAQ1I,QAzExB,WAII,IAAK,IAAMqC,KAHXN,QAAQC,IAAI,2BACZuF,IACAxF,QAAQC,IAAIiB,GACKA,EACb4E,EAAuBxF,EAAIY,EAAUZ,IAGzC2E,EAAW,qBACXU,IACAK,IAEAhG,QAAQC,IAAI,uCA6DmCb,UAAU,yBAA7C,SACK4F,OAGT,qBAAK5F,UAAU,oBAAf,SACI,cAAC,EAAD,CAAaiB,KAAM+E,EAAY,GAAG/E,KAAM2B,KAAMoD,EAAY,GAAGpD,KAAMoC,cAxGnF,SAAgCwC,GAC5B,IAAIC,EAASzB,EAAY,GACzByB,EAAOxG,KAAOuG,EACdvB,EAAW,CAACD,EAAY,GAAIyB,IAC5B5B,EAAW,mBAoG2GX,aAlG1H,SAA+BwC,GAC3B,IAAID,EAASzB,EAAY,GACzByB,EAAO7E,KAAO8E,EACdzB,EAAW,CAACD,EAAY,GAAIyB,IAC5B5B,EAAW,0BAiGP,sBAAK7F,UAAU,sBAAf,UACI,cAAC,IAAD,CAAMN,GAAI,aAAegG,EAAWxE,GAAK,IAAM/B,EAAKgD,IAApD,SACI,wBAAQnC,UAAU,kBAAlB,kCAGJ,cAAC,IAAD,CAAc2H,MAAM,wBAAwBC,SAAU5B,EAAY,GAAG/E,KAAM4G,WAAY,kBAAM7B,EAAY,GAAGpD,MAAM3C,MAAO,CAAEC,MAAO,QAAS4H,eAAgB,QAAU9H,UAAU,2BCxKzL1B,EAAOC,cAkCEwJ,MAjCf,WACI,MAA+BjI,YAAaxB,GAA5C,mBAAOa,EAAP,KAAaY,EAAb,KAKA,OALA,KACAY,qBAAU,WACNC,QAAQC,IAAId,GACZa,QAAQC,IAAI1B,KACb,CAACY,IAEA,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOiI,KAAK,UAAZ,SACI,cAAC,EAAD,MAEJ,eAAC,IAAD,CAAOA,KAAK,aAAZ,UACMjI,QAAmBM,GAARlB,EAAwD,6BAApC,cAAC,IAAD,CAAUO,GAAG,WAC9C,cAAC,EAAD,IACA,cAAC,EAAD,OAEJ,cAAC,IAAD,CAAOsI,KAAK,UAAZ,SACI,cAAC,EAAD,CAAQ7I,KAAMA,MAElB,eAAC,IAAD,CAAO6I,KAAK,YAAZ,UACI,cAAC,EAAD,IACA,cAAC,EAAD,OAEJ,cAAC,IAAD,CAAOA,KAAK,wBAAZ,SACI,cAACC,EAAD,MAEJ,cAAC,IAAD,CAAOD,KAAK,IAAZ,SAAiBjI,EAAU,iDAA8BM,GAARlB,EAAoB,cAAC,IAAD,CAAUO,GAAG,YAAwB,cAAC,IAAD,CAAUA,GAAG,sBC7BxHwI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrJ,MAAK,YAAkD,IAA/CsJ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5BZ,M","file":"static/js/main.d519235e.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nconst firebaseConfig = {\n    apiKey: \"AIzaSyATNn2F0KJSKE75CEonDPtY3Q9OVZXodm0\",\n    authDomain: \"template-manager-4f0cc.firebaseapp.com\",\n    projectId: \"template-manager-4f0cc\",\n    storageBucket: \"template-manager-4f0cc.appspot.com\",\n    messagingSenderId: \"558222395374\",\n    appId: \"1:558222395374:web:44e98352458d99ba93b0ff\",\n    measurementId: \"G-73KRE4N508\",\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nexport default app;\n","import { app } from \"../firebase.js\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport { Redirect } from \"react-router-dom\";\nimport { useState } from \"react\";\nconst provider = new GoogleAuthProvider();\nconst auth = getAuth();\n\nconst SignIn = (props) => {\n    const [redirect, changeRedirect] = useState(false);\n    function doSignIn() {\n        signInWithPopup(auth, provider)\n            .then((result) => {\n                const credential = GoogleAuthProvider.credentialFromResult(result);\n                const token = credential.accessToken;\n                const user = result.user;\n                // ...\n                changeRedirect(true);\n            })\n            .catch((error) => {\n                const errorCode = error.code;\n                const errorMessage = error.message;\n                const email = error.email;\n                const credential = GoogleAuthProvider.credentialFromError(error);\n            });\n    }\n    return (\n        <div>\n            <button onClick={doSignIn}>Sign in with Google</button>\n            {redirect ? <Redirect to='/dashboard'></Redirect> : <></>}\n        </div>\n    );\n};\nexport default SignIn;\n","import app from \"../firebase.js\";\nimport { FaFolder } from \"react-icons/fa\";\nimport { getAuth, signOut } from \"firebase/auth\";\nimport { useHistory } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport \"../styles/NavBar.css\";\nconst auth = getAuth();\nconst NavBar = (props) => {\n    let history = useHistory();\n    const [user, loading, error] = useAuthState(auth);\n\n    function signOutUser() {\n        signOut(auth)\n            .then(() => {\n                history.push(\"/signin\");\n            })\n            .catch((error) => {\n                // An error happened.\n            });\n    }\n    return (\n        <div className='top-nav'>\n            <FaFolder className='icon'></FaFolder>\n            <h2>Template Manager</h2>\n            <Link to='/dashboard' style={{ color: \"black\" }}>\n                <h2>Home</h2>\n            </Link>\n            <Link to='/create' style={{ color: \"black\" }}>\n                <h2>Create New</h2>\n            </Link>\n            <div className='profile-section'>\n                <button onClick={signOutUser} className='sign-out'>\n                    <h2 className='non-default-h2'>Sign Out</h2>\n                </button>\n                {!loading && user != undefined ? (\n                    <div className='profile-img-container'>\n                        <img src={user.photoURL} className='profile-image'></img>\n                    </div>\n                ) : (\n                    <></>\n                )}\n            </div>\n        </div>\n    );\n};\nexport default NavBar;\n","import { Link } from \"react-router-dom\";\nimport { MdEdit } from \"react-icons/md\";\nimport { useEffect, useState } from \"react\";\n\nconst FolderViewer = (props) => {\n    const [date, changeDate] = useState(\"Loading...\");\n    useEffect(() => {\n        console.log(props.timestamp.toDate());\n        let date = props.timestamp.toDate() + \"\";\n        date = date.split(\" \");\n        console.log(date);\n        date = date[4] + \" \" + date[1] + \" \" + date[2];\n        changeDate(date);\n    }, []);\n    function copyUrl() {\n        let url = \"https://www.wyattcowley.com/template-manager/#/download/\";\n        url = url + props.id + \"/\" + props.userId;\n        navigator.clipboard.writeText(url);\n    }\n    return (\n        <div className='folder-viewer-container'>\n            <div className='first-row'>\n                <p className='folder-title'>{props.name}</p>\n                <Link to={\"/edit/\" + props.id} className='edit-link'>\n                    <MdEdit style={{ width: 100 + \"%\", height: 100 + \"%\", fill: \"rgb(44, 44, 83)\" }}></MdEdit>\n                </Link>\n            </div>\n            <p>{\"Last Edited \" + date}</p>\n            <div className='last-row'>\n                <Link to={\"/download/\" + props.id + \"/\" + props.userId}>\n                    <button className='action-button'>Download all files</button>\n                </Link>\n                <button className='action-button' onClick={copyUrl}>\n                    Copy download link\n                </button>\n            </div>\n        </div>\n    );\n};\nexport default FolderViewer;\n","import { app } from \"../firebase.js\";\nimport { getAuth } from \"@firebase/auth\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { doc, orderBy, query, setDoc, addDoc, collection, getFirestore, getDocs, updateDoc } from \"firebase/firestore\";\n\nimport { useEffect, useState } from \"react\";\nimport FolderViewer from \"../components/FolderViewer.jsx\";\nimport \"../styles/Dashboard.css\";\n\nconst auth = getAuth();\nconst db = getFirestore();\nconst Dashboard = (props) => {\n    const [user, loading, error] = useAuthState(auth);\n    const [totalData, setData] = useState({});\n    useEffect(() => {\n        if (!loading) {\n            retrieveFirebaseFiles();\n        }\n    }, [loading]);\n    async function retrieveFirebaseFiles() {\n        const userRef = doc(db, \"users\", user.uid);\n        const q = query(collection(userRef, \"folders\"), orderBy(\"timestamp\", \"desc\"));\n        const querySnapshot = await getDocs(q);\n        const temporaryData = {};\n        querySnapshot.forEach((doc) => {\n            temporaryData[doc.id] = doc.data();\n        });\n        console.log(temporaryData);\n        setData(temporaryData);\n    }\n    return (\n        <div className='dashboard-container'>\n            <h1>Recent Templates</h1>\n            <div className='folder-container'>\n                {Object.keys(totalData).map((id) => {\n                    return <FolderViewer name={totalData[id].name} id={id} userId={user.uid} timestamp={totalData[id].timestamp}></FolderViewer>;\n                })}\n            </div>\n        </div>\n    );\n};\nexport default Dashboard;\n","import { app } from \"../firebase.js\";\nimport { doc, getFirestore, getDoc, getDocs, collection, query, querySnapshot } from \"@firebase/firestore\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { saveAs } from \"file-saver\";\nimport { Link } from \"react-router-dom\";\nconst db = getFirestore();\n\nconst Dashboard = (props) => {\n    let { id } = useParams();\n    let { userId } = useParams();\n    const [folderTitle, setFolderTitle] = useState(\"Loading\");\n    const [totalData, setTotalData] = useState({});\n\n    useEffect(() => {\n        console.log(id, userId);\n        getFirebaseData();\n    }, []);\n    async function getFirebaseData() {\n        const userRef = doc(db, \"users\", userId);\n        const folderRef = doc(userRef, \"folders\", id);\n        const folderMetaData = await getDoc(folderRef);\n\n        const q = query(collection(folderRef, \"files\"));\n        console.log(q);\n        const querySnapshot = await getDocs(q);\n        var x = 0;\n        var totalDataTemporary = {};\n        querySnapshot.forEach((doc) => {\n            // doc.data() is never undefined for query doc snapshots\n            totalDataTemporary[doc.id] = doc.data();\n            console.log(doc.id, \" => \", doc.data());\n            x++;\n        });\n        setTotalData(totalDataTemporary);\n        console.log(\"Set state\");\n        console.log(totalData);\n    }\n    function downloadEverything() {\n        var FileSaver = require(\"file-saver\");\n        Object.keys(totalData).forEach((id) => {\n            var blob = new Blob([totalData[id].data], { type: \"text/plain;charset=utf-8\" });\n            FileSaver.saveAs(blob, [totalData[id].name]);\n        });\n    }\n    return (\n        <div>\n            <h1>Warning: You are about to download the following files:</h1>\n            <Link to='/home'>Return back to homepage</Link>\n            {Object.keys(totalData).map((id) => {\n                return (\n                    <div>\n                        <p>{totalData[id].name}</p>\n                        <span></span>\n                    </div>\n                );\n            })}\n            <button onClick={downloadEverything}>Download All</button>\n        </div>\n    );\n};\n\nexport default Dashboard;\n","import { useEffect } from \"react\";\nimport app from \"../firebase.js\";\nimport { doc, setDoc, addDoc, collection, getFirestore } from \"firebase/firestore\";\nimport { useHistory } from \"react-router\";\nconst db = getFirestore();\n\nconst Create = (props) => {\n    let history = useHistory();\n    useEffect(() => {\n        console.log(props.user.uid);\n        const userDocument = doc(db, \"users\", props.user.uid);\n        setDocument(userDocument);\n    }, []);\n    async function setDocument(userDocument) {\n        await setDoc(userDocument, {\n            uid: props.user.uid,\n            displayName: props.user.displayName,\n        });\n\n        const documentReference = await addDoc(collection(userDocument, \"folders\"), {\n            name: \"Untitled\",\n            owner: props.user.uid,\n        });\n        const subDocumentReference = await setDoc(doc(documentReference, \"files\", \"Untitled.FileExtension\"), {\n            name: \"Untitled.FileExtension\",\n            data: \"Start typing here\",\n        });\n        console.log(documentReference.id);\n        history.push(\"/edit/\" + documentReference.id);\n    }\n    return <></>;\n};\nexport default Create;\n","import { useEffect, useState } from \"react\";\nimport AceEditor from \"react-ace\";\nimport { MdEdit } from \"react-icons/md\";\nimport { FaSave } from \"react-icons/fa\";\nimport \"../styles/Edit.css\";\nimport \"ace-builds/src-noconflict/theme-github\";\n\nconst DisplayFile = (props) => {\n    const [updateTitle, setUpdateTitle] = useState(false);\n    const [localTitle, setLocalTitle] = useState(props.name);\n    const [enteredValue, setValue] = useState(props.data);\n    useEffect(() => {\n        setLocalTitle(props.name);\n        setValue(props.data);\n    }, [props]);\n\n    function onChange(newValue) {\n        setValue(newValue);\n        props.onDataChange(newValue);\n    }\n    function pressedEditButton() {\n        if (updateTitle == true) {\n            props.onTitleChange(localTitle);\n        }\n        setUpdateTitle(!updateTitle);\n    }\n    function updateTitleLocally(event) {\n        setLocalTitle(event.target.value);\n    }\n    return (\n        <div className='file-specific-section'>\n            {!updateTitle ? <h2 className='file-title'>{props.name}</h2> : <input value={localTitle} onChange={updateTitleLocally} className='title-entry'></input>}\n            <button onClick={pressedEditButton} className='edit-title-button'>\n                {!updateTitle ? <MdEdit className='edit-title-icon'></MdEdit> : <FaSave className='edit-title-icon'></FaSave>}\n            </button>\n            <AceEditor onChange={onChange} height='80%' width='95%' className='code-editor' theme='xcode' name='main-code-editor' value={enteredValue} editorProps={{ $blockScrolling: true }} />\n        </div>\n    );\n};\nexport default DisplayFile;\n","import { app } from \"../firebase.js\";\nimport { getAuth } from \"@firebase/auth\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { doc, query, getDoc, setDoc, addDoc, collection, getFirestore, getDocs, updateDoc, serverTimestamp } from \"firebase/firestore\";\nimport { FaDownload } from \"react-icons/fa\";\nimport { FaSave } from \"react-icons/fa\";\n\nimport { FaFolder } from \"react-icons/fa\";\nimport { MdEdit } from \"react-icons/md\";\n\nimport { useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport DownloadLink from \"react-download-link\";\n\nimport DisplayFile from \"../components/DisplayFile.jsx\";\n\nimport \"../styles/Edit.css\";\nconst db = getFirestore();\nconst auth = getAuth();\n\nconst Edit = (props) => {\n    const [user, loading, error] = useAuthState(auth);\n    const [folderTitle, setFolderTitle] = useState(\"Loading...\");\n    const [totalData, setData] = useState({ saMPle: { data: \"\", name: \"\" } });\n    const [mainDocRef, setDocRef] = useState({ id: 1 });\n    const [changesPrompt, setChanges] = useState(\"All Changes Saved\");\n    const [changeFolderTitle, setChangeFolderTitle] = useState(false);\n    const [visibleFile, setVisible] = useState([\"Loading\", { data: \"Loading files...\", name: \"Loading...\" }]);\n    let { id } = useParams();\n\n    useEffect(() => {\n        if (!loading && user != undefined) {\n            setDocRef(doc(doc(db, \"users\", user.uid), \"folders\", id));\n            console.log(user.uid, id);\n            console.log(mainDocRef);\n            getDataFromFirestore();\n        }\n    }, [loading]);\n    useEffect(() => {\n        window.addEventListener(\"beforeunload\", (event) => {\n            // Cancel the event as stated by the standard.\n            // Chrome requires returnValue to be set.\n\n            event.returnValue = \"\";\n            event.preventDefault();\n            return \"Make sure to save your files!\";\n        });\n    });\n    async function getDataFromFirestore() {\n        console.log(mainDocRef);\n        const mainDocData = await getDoc(doc(doc(db, \"users\", user.uid), \"folders\", id));\n        setFolderTitle(mainDocData.data().name);\n        const q = query(collection(doc(doc(db, \"users\", user.uid), \"folders\", id), \"files\"));\n        console.log(q);\n        const querySnapshot = await getDocs(q);\n        var x = 0;\n        var totalDataTemporary = {};\n        querySnapshot.forEach((doc) => {\n            // doc.data() is never undefined for query doc snapshots\n            if (x == 0) {\n                setVisible([doc.id, doc.data()]);\n            }\n            totalDataTemporary[doc.id] = doc.data();\n            console.log(doc.id, \" => \", doc.data());\n            x++;\n        });\n        setData(totalDataTemporary);\n        console.log(totalData);\n    }\n    function changeTitleForSelected(newTitle) {\n        let object = visibleFile[1];\n        object.name = newTitle;\n        setVisible([visibleFile[0], object]);\n        setChanges(\"Save all files\");\n    }\n    function changeDataForSelected(newData) {\n        let object = visibleFile[1];\n        object.data = newData;\n        setVisible([visibleFile[0], object]);\n        setChanges(\"Save all files\");\n        // console.log(object.data);\n    }\n    function updateLocallyForSelected() {\n        let copy = totalData;\n        let localDocument = copy[visibleFile[0]];\n        localDocument.data = visibleFile[1].data;\n        localDocument.name = visibleFile[1].name;\n        copy[visibleFile[0]] = localDocument;\n        setData(copy);\n    }\n    function switchSelectedFile(newId) {\n        console.log(newId);\n        updateLocallyForSelected();\n        setVisible([newId, totalData[newId]]);\n    }\n    function uploadToFirebase() {\n        console.log(\"Starting upload process\");\n        updateLocallyForSelected();\n        console.log(totalData);\n        for (const id in totalData) {\n            updateSingularDocument(id, totalData[id]);\n        }\n\n        setChanges(\"All changes saved\");\n        updateTimestamp();\n        updateFolderTitleServer();\n\n        console.log(\"Hopefully done with upload process\");\n    }\n    async function updateTimestamp() {\n        const updateTimestamp = await updateDoc(mainDocRef, {\n            timestamp: serverTimestamp(),\n        });\n        console.log(\"Timestamp updated\");\n    }\n    function addNewFile() {\n        let copy = totalData;\n        copy[Math.random() * 10000000000] = { name: \"Untitled.FileExtension\", data: \"Copy code here\" };\n        setData({ ...copy });\n        setChanges(\"Save all files\");\n    }\n    function changeFolderTitleNow() {\n        if (!changeFolderTitle) {\n            setChangeFolderTitle(true);\n        } else {\n            updateFolderTitleServer();\n            updateTimestamp();\n\n            setChangeFolderTitle(false);\n        }\n    }\n    async function updateSingularDocument(id, value) {\n        const otherDoc = doc(mainDocRef, \"files\", id);\n        await setDoc(otherDoc, {\n            name: value.name,\n            data: value.data,\n        });\n    }\n    async function updateFolderTitleServer() {\n        await updateDoc(mainDocRef, {\n            name: folderTitle,\n        });\n    }\n    function updateFolderTitle(event) {\n        setFolderTitle(event.target.value);\n    }\n    return (\n        <>\n            <div className='complete-editor-container'>\n                <div className='sidebar-container'>\n                    <br />\n                    <br />\n\n                    <div className='large-tab-container'>\n                        <div className='folder-title-container'>\n                            <FaFolder style={{ marginLeft: \"1rem\" }}></FaFolder>\n                            {!changeFolderTitle ? <p className='folder-title-actual'>{folderTitle}</p> : <input className='folder-title-actual' onChange={updateFolderTitle} value={folderTitle}></input>}\n                            <button onClick={changeFolderTitleNow}>{!changeFolderTitle ? <MdEdit style={{ marginLeft: \"1rem\" }}></MdEdit> : <FaSave style={{ marginLeft: \"1rem\" }}></FaSave>}</button>\n                        </div>\n                        {Object.keys(totalData).map((item) => (\n                            <button onClick={() => switchSelectedFile(item)} className='tab-button'>\n                                <span style={{ color: item == visibleFile[0] ? \"grey\" : \"black\" }}>{totalData[item].name}</span>\n                            </button>\n                        ))}\n                    </div>\n                    <button onClick={addNewFile} className='tab-button save-button' style={{ marginBottom: \".5rem\" }}>\n                        Add File\n                    </button>\n                    <button onClick={uploadToFirebase} className='tab-button save-button'>\n                        {changesPrompt}\n                    </button>\n                </div>\n                <div className='non-tab-container'>\n                    <DisplayFile name={visibleFile[1].name} data={visibleFile[1].data} onTitleChange={changeTitleForSelected} onDataChange={changeDataForSelected}></DisplayFile>\n                </div>\n            </div>\n            <div className='downloading-options'>\n                <Link to={\"/download/\" + mainDocRef.id + \"/\" + user.uid}>\n                    <button className='download-button'>Download All Files</button>\n                </Link>\n                {/* <button className='download-button'> */}\n                <DownloadLink label='Download Current File' filename={visibleFile[1].name} exportFile={() => visibleFile[1].data} style={{ color: \"white\", textDecoration: \"none\" }} className='download-button' />\n                {/* </button> */}\n            </div>\n        </>\n    );\n};\nexport default Edit;\n","import \"../styles/App.css\";\nimport app from \"../firebase.js\";\nimport { HashRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { getAuth } from \"firebase/auth\";\nimport { useEffect } from \"react\";\nimport SignIn from \"../components/SignIn.jsx\";\nimport Navbar from \"../components/NavBar.jsx\";\nimport Dashboard from \"../pages/Dashboard.jsx\";\nimport Download from \"../pages/Download.jsx\";\nimport Create from \"./Create.jsx\";\nimport Edit from \"./Edit.jsx\";\n\nconst auth = getAuth();\nfunction App() {\n    const [user, loading, error] = useAuthState(auth);\n    useEffect(() => {\n        console.log(loading);\n        console.log(user);\n    }, [loading]);\n    return (\n        <Router>\n            <Switch>\n                <Route path='/signin'>\n                    <SignIn></SignIn>\n                </Route>\n                <Route path='/dashboard'>\n                    {!loading && user == undefined ? <Redirect to='signin'></Redirect> : <></>}\n                    <Navbar></Navbar>\n                    <Dashboard></Dashboard>\n                </Route>\n                <Route path='/create'>\n                    <Create user={user}></Create>\n                </Route>\n                <Route path='/edit/:id'>\n                    <Navbar></Navbar>\n                    <Edit></Edit>\n                </Route>\n                <Route path='/download/:id/:userId'>\n                    <Download></Download>\n                </Route>\n                <Route path='/'>{loading ? <h1>Loading...</h1> : user == undefined ? <Redirect to='/signin'></Redirect> : <Redirect to='dashboard'></Redirect>}</Route>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./pages/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}