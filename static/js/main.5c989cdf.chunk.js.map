{"version":3,"sources":["firebase.js","components/SignIn.jsx","components/NavBar.jsx","components/FolderViewer.jsx","pages/Dashboard.jsx","pages/Download.jsx","pages/Create.jsx","components/DisplayFile.jsx","pages/Edit.jsx","pages/App.js","reportWebVitals.js","index.js"],"names":["initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","GoogleAuthProvider","auth","getAuth","SignIn","props","useState","redirect","changeRedirect","className","onClick","signInWithPopup","then","result","credentialFromResult","accessToken","user","catch","error","code","message","email","credentialFromError","to","NavBar","history","useHistory","useAuthState","loading","class","style","color","signOut","push","undefined","src","photoURL","FolderViewer","date","changeDate","useEffect","console","log","timestamp","toDate","split","name","id","width","height","fill","userId","url","navigator","clipboard","writeText","db","getFirestore","Dashboard","totalData","setData","hasNoEntries","setHasNoEntries","a","userRef","doc","uid","q","query","collection","orderBy","getDocs","querySnapshot","temporaryData","x","forEach","data","retrieveFirebaseFiles","textDecoration","Object","keys","map","useParams","setTotalData","folderRef","getDoc","totalDataTemporary","getFirebaseData","FileSaver","require","blob","Blob","type","saveAs","Create","userDocument","setDoc","displayName","addDoc","owner","documentReference","setDocument","DisplayFile","updateTitle","setUpdateTitle","localTitle","setLocalTitle","enteredValue","setValue","value","onChange","event","target","onTitleChange","newValue","onDataChange","theme","editorProps","$blockScrolling","Edit","folderTitle","setFolderTitle","saMPle","mainDocRef","setDocRef","changesPrompt","setChanges","changeFolderTitle","setChangeFolderTitle","visibleFile","setVisible","mainDocData","updateLocallyForSelected","copy","localDocument","updateTimestamp","updateDoc","serverTimestamp","updateSingularDocument","otherDoc","updateFolderTitleServer","getDataFromFirestore","marginLeft","item","newId","Math","random","marginBottom","newTitle","object","newData","label","filename","exportFile","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c989cdf.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nconst firebaseConfig = {\n    apiKey: \"AIzaSyATNn2F0KJSKE75CEonDPtY3Q9OVZXodm0\",\n    authDomain: \"template-manager-4f0cc.firebaseapp.com\",\n    projectId: \"template-manager-4f0cc\",\n    storageBucket: \"template-manager-4f0cc.appspot.com\",\n    messagingSenderId: \"558222395374\",\n    appId: \"1:558222395374:web:44e98352458d99ba93b0ff\",\n    measurementId: \"G-73KRE4N508\",\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nexport default app;\n","import { app } from \"../firebase.js\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport { Redirect } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport \"../styles/SignIn.css\";\nimport GoogleButton from \"react-google-button\";\n\nconst provider = new GoogleAuthProvider();\nconst auth = getAuth();\n\nconst SignIn = (props) => {\n    const [redirect, changeRedirect] = useState(false);\n    function doSignIn() {\n        signInWithPopup(auth, provider)\n            .then((result) => {\n                const credential = GoogleAuthProvider.credentialFromResult(result);\n                const token = credential.accessToken;\n                const user = result.user;\n                // ...\n                changeRedirect(true);\n            })\n            .catch((error) => {\n                const errorCode = error.code;\n                const errorMessage = error.message;\n                const email = error.email;\n                const credential = GoogleAuthProvider.credentialFromError(error);\n            });\n    }\n    return (\n        <div className='container'>\n            <GoogleButton onClick={doSignIn} className='google-button'>\n                Sign in with Google\n            </GoogleButton>\n            {redirect ? <Redirect to='/dashboard'></Redirect> : <></>}\n        </div>\n    );\n};\nexport default SignIn;\n","import app from \"../firebase.js\";\nimport { FaFolder } from \"react-icons/fa\";\nimport { getAuth, signOut } from \"firebase/auth\";\nimport { useHistory } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport \"../styles/NavBar.css\";\nconst auth = getAuth();\nconst NavBar = (props) => {\n    let history = useHistory();\n    const [user, loading, error] = useAuthState(auth);\n\n    function signOutUser() {\n        signOut(auth)\n            .then(() => {\n                history.push(\"/signin\");\n            })\n            .catch((error) => {\n                // An error happened.\n            });\n    }\n    return (\n        <div className='top-nav'>\n            <FaFolder className='icon'></FaFolder>\n            <h2 class='no-hover'>Template Manager</h2>\n            <Link to='/dashboard' style={{ color: \"black\" }}>\n                <h2>Home</h2>\n            </Link>\n            <Link to='/create' style={{ color: \"black\" }}>\n                <h2>Create New</h2>\n            </Link>\n            <div className='profile-section'>\n                <button onClick={signOutUser} className='sign-out'>\n                    <h2 className='non-default-h2'>Sign Out</h2>\n                </button>\n                {!loading && user != undefined ? (\n                    <div className='profile-img-container'>\n                        <img src={user.photoURL} className='profile-image'></img>\n                    </div>\n                ) : (\n                    <></>\n                )}\n            </div>\n        </div>\n    );\n};\nexport default NavBar;\n","import { Link } from \"react-router-dom\";\nimport { MdEdit } from \"react-icons/md\";\nimport { useEffect, useState } from \"react\";\n\nconst FolderViewer = (props) => {\n    const [date, changeDate] = useState(\"Loading...\");\n    useEffect(() => {\n        console.log(props.timestamp.toDate());\n        let date = props.timestamp.toDate() + \"\";\n        date = date.split(\" \");\n        console.log(date);\n        date = date[4] + \" \" + date[1] + \" \" + date[2];\n        changeDate(date);\n    }, []);\n    function copyUrl() {\n        let url = \"https://www.wyattcowley.com/template-manager/#/download/\";\n        url = url + props.id + \"/\" + props.userId;\n        navigator.clipboard.writeText(url);\n    }\n    return (\n        <div className='folder-viewer-container'>\n            <div className='first-row'>\n                <p className='folder-title'>{props.name}</p>\n                <Link to={\"/edit/\" + props.id} className='edit-link'>\n                    <MdEdit style={{ width: 100 + \"%\", height: 100 + \"%\", fill: \"rgb(44, 44, 83)\" }}></MdEdit>\n                </Link>\n            </div>\n            <p>{\"Last Edited \" + date}</p>\n            <div className='last-row'>\n                <Link to={\"/download/\" + props.id + \"/\" + props.userId}>\n                    <button className='action-button'>Download all files</button>\n                </Link>\n                <button className='action-button' onClick={copyUrl}>\n                    Copy download link\n                </button>\n            </div>\n        </div>\n    );\n};\nexport default FolderViewer;\n","import { app } from \"../firebase.js\";\nimport { getAuth } from \"@firebase/auth\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { doc, orderBy, query, setDoc, addDoc, collection, getFirestore, getDocs, updateDoc } from \"firebase/firestore\";\n\nimport { useEffect, useState } from \"react\";\nimport FolderViewer from \"../components/FolderViewer.jsx\";\nimport \"../styles/Dashboard.css\";\n\nconst auth = getAuth();\nconst db = getFirestore();\nconst Dashboard = (props) => {\n    const [user, loading, error] = useAuthState(auth);\n    const [totalData, setData] = useState({});\n    const [hasNoEntries, setHasNoEntries] = useState(false);\n    useEffect(() => {\n        if (!loading) {\n            retrieveFirebaseFiles();\n        }\n    }, [loading]);\n    async function retrieveFirebaseFiles() {\n        const userRef = doc(db, \"users\", user.uid);\n        const q = query(collection(userRef, \"folders\"), orderBy(\"timestamp\", \"desc\"));\n        const querySnapshot = await getDocs(q);\n        const temporaryData = {};\n        let x = 0;\n        querySnapshot.forEach((doc) => {\n            temporaryData[doc.id] = doc.data();\n            x++;\n        });\n        if (x == 0) {\n            setHasNoEntries(true);\n        }\n        console.log(temporaryData);\n        setData(temporaryData);\n    }\n    return (\n        <div className='dashboard-container'>\n            <h1 style={{ textDecoration: \"underline\" }}>Recent Templates</h1>\n            <div className='folder-container'>\n                {Object.keys(totalData).map((id) => {\n                    return <FolderViewer name={totalData[id].name} id={id} userId={user.uid} timestamp={totalData[id].timestamp}></FolderViewer>;\n                })}\n                {hasNoEntries ? <p>To get started, add a project</p> : <></>}\n            </div>\n        </div>\n    );\n};\nexport default Dashboard;\n","import { app } from \"../firebase.js\";\nimport { doc, getFirestore, getDoc, getDocs, collection, query, querySnapshot } from \"@firebase/firestore\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { saveAs } from \"file-saver\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/Download.css\";\nconst db = getFirestore();\n\nconst Dashboard = (props) => {\n    let { id } = useParams();\n    let { userId } = useParams();\n    const [folderTitle, setFolderTitle] = useState(\"Loading\");\n    const [totalData, setTotalData] = useState({});\n\n    useEffect(() => {\n        console.log(id, userId);\n        getFirebaseData();\n    }, []);\n    async function getFirebaseData() {\n        const userRef = doc(db, \"users\", userId);\n        const folderRef = doc(userRef, \"folders\", id);\n        const folderMetaData = await getDoc(folderRef);\n\n        const q = query(collection(folderRef, \"files\"));\n        console.log(q);\n        const querySnapshot = await getDocs(q);\n        var x = 0;\n        var totalDataTemporary = {};\n        querySnapshot.forEach((doc) => {\n            // doc.data() is never undefined for query doc snapshots\n            totalDataTemporary[doc.id] = doc.data();\n            console.log(doc.id, \" => \", doc.data());\n            x++;\n        });\n        setTotalData(totalDataTemporary);\n        console.log(\"Set state\");\n        console.log(totalData);\n    }\n    function downloadEverything() {\n        var FileSaver = require(\"file-saver\");\n        Object.keys(totalData).forEach((id) => {\n            var blob = new Blob([totalData[id].data], { type: \"text/plain;charset=utf-8\" });\n            FileSaver.saveAs(blob, [totalData[id].name]);\n        });\n    }\n    return (\n        <div className='container'>\n            <h1 className='warning-message'>Warning: You are about to download the following files</h1>\n            <Link to='/home' className='return-message'>\n                Return back to homepage\n            </Link>\n            {Object.keys(totalData).map((id) => {\n                return (\n                    <div className='thing'>\n                        <p>{totalData[id].name}</p>\n                        <span></span>\n                    </div>\n                );\n            })}\n            <button onClick={downloadEverything} className='button'>\n                Download All\n            </button>\n        </div>\n    );\n};\n\nexport default Dashboard;\n","import { useEffect } from \"react\";\nimport app from \"../firebase.js\";\nimport { doc, setDoc, addDoc, collection, getFirestore } from \"firebase/firestore\";\nimport { useHistory } from \"react-router\";\nconst db = getFirestore();\n\nconst Create = (props) => {\n    let history = useHistory();\n    useEffect(() => {\n        console.log(props.user.uid);\n        const userDocument = doc(db, \"users\", props.user.uid);\n        setDocument(userDocument);\n    }, []);\n    async function setDocument(userDocument) {\n        await setDoc(userDocument, {\n            uid: props.user.uid,\n            displayName: props.user.displayName,\n        });\n\n        const documentReference = await addDoc(collection(userDocument, \"folders\"), {\n            name: \"Untitled\",\n            owner: props.user.uid,\n        });\n        const subDocumentReference = await setDoc(doc(documentReference, \"files\", \"Untitled.FileExtension\"), {\n            name: \"Untitled.FileExtension\",\n            data: \"Start typing here\",\n        });\n        console.log(documentReference.id);\n        history.push(\"/edit/\" + documentReference.id);\n    }\n    return <></>;\n};\nexport default Create;\n","import { useEffect, useState } from \"react\";\nimport AceEditor from \"react-ace\";\nimport { MdEdit } from \"react-icons/md\";\nimport { FaSave } from \"react-icons/fa\";\nimport \"../styles/Edit.css\";\nimport \"ace-builds/src-noconflict/theme-github\";\n\nconst DisplayFile = (props) => {\n    const [updateTitle, setUpdateTitle] = useState(false);\n    const [localTitle, setLocalTitle] = useState(props.name);\n    const [enteredValue, setValue] = useState(props.data);\n    useEffect(() => {\n        setLocalTitle(props.name);\n        setValue(props.data);\n    }, [props]);\n\n    function onChange(newValue) {\n        setValue(newValue);\n        props.onDataChange(newValue);\n    }\n    function pressedEditButton() {\n        if (updateTitle == true) {\n            props.onTitleChange(localTitle);\n        }\n        setUpdateTitle(!updateTitle);\n    }\n    function updateTitleLocally(event) {\n        setLocalTitle(event.target.value);\n    }\n    return (\n        <div className='file-specific-section'>\n            {!updateTitle ? <h2 className='file-title'>{props.name}</h2> : <input value={localTitle} onChange={updateTitleLocally} className='title-entry'></input>}\n            <button onClick={pressedEditButton} className='edit-title-button'>\n                {!updateTitle ? <MdEdit className='edit-title-icon'></MdEdit> : <FaSave className='edit-title-icon'></FaSave>}\n            </button>\n            <AceEditor onChange={onChange} height='80%' width='95%' className='code-editor' theme='xcode' name='main-code-editor' value={enteredValue} editorProps={{ $blockScrolling: true }} />\n        </div>\n    );\n};\nexport default DisplayFile;\n","import { app } from \"../firebase.js\";\nimport { getAuth } from \"@firebase/auth\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { doc, query, getDoc, setDoc, addDoc, collection, getFirestore, getDocs, updateDoc, serverTimestamp } from \"firebase/firestore\";\nimport { FaDownload } from \"react-icons/fa\";\nimport { FaSave } from \"react-icons/fa\";\n\nimport { FaFolder } from \"react-icons/fa\";\nimport { MdEdit } from \"react-icons/md\";\n\nimport { useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport DownloadLink from \"react-download-link\";\n\nimport DisplayFile from \"../components/DisplayFile.jsx\";\n\nimport \"../styles/Edit.css\";\nconst db = getFirestore();\nconst auth = getAuth();\n\nconst Edit = (props) => {\n    const [user, loading, error] = useAuthState(auth);\n    const [folderTitle, setFolderTitle] = useState(\"Loading...\");\n    const [totalData, setData] = useState({ saMPle: { data: \"\", name: \"\" } });\n    const [mainDocRef, setDocRef] = useState({ id: 1 });\n    const [changesPrompt, setChanges] = useState(\"Save Changes\");\n    const [changeFolderTitle, setChangeFolderTitle] = useState(false);\n    const [visibleFile, setVisible] = useState([\"Loading\", { data: \"Loading files...\", name: \"Loading...\" }]);\n    let { id } = useParams();\n\n    useEffect(() => {\n        if (!loading && user != undefined) {\n            setDocRef(doc(doc(db, \"users\", user.uid), \"folders\", id));\n            console.log(user.uid, id);\n            console.log(mainDocRef);\n            getDataFromFirestore();\n        }\n    }, [loading]);\n\n    async function getDataFromFirestore() {\n        console.log(mainDocRef);\n        const mainDocData = await getDoc(doc(doc(db, \"users\", user.uid), \"folders\", id));\n        setFolderTitle(mainDocData.data().name);\n        const q = query(collection(doc(doc(db, \"users\", user.uid), \"folders\", id), \"files\"));\n        console.log(q);\n        const querySnapshot = await getDocs(q);\n        var x = 0;\n        var totalDataTemporary = {};\n        querySnapshot.forEach((doc) => {\n            // doc.data() is never undefined for query doc snapshots\n            if (x == 0) {\n                setVisible([doc.id, doc.data()]);\n            }\n            totalDataTemporary[doc.id] = doc.data();\n            console.log(doc.id, \" => \", doc.data());\n            x++;\n        });\n        setData(totalDataTemporary);\n        console.log(totalData);\n    }\n    function changeTitleForSelected(newTitle) {\n        let object = visibleFile[1];\n        object.name = newTitle;\n        setVisible([visibleFile[0], object]);\n        setChanges(\"Save all files\");\n    }\n    function changeDataForSelected(newData) {\n        let object = visibleFile[1];\n        object.data = newData;\n        setVisible([visibleFile[0], object]);\n        setChanges(\"Save all files\");\n        // console.log(object.data);\n    }\n    function updateLocallyForSelected() {\n        let copy = totalData;\n        let localDocument = copy[visibleFile[0]];\n        localDocument.data = visibleFile[1].data;\n        localDocument.name = visibleFile[1].name;\n        copy[visibleFile[0]] = localDocument;\n        setData(copy);\n    }\n    function switchSelectedFile(newId) {\n        console.log(newId);\n        updateLocallyForSelected();\n        setVisible([newId, totalData[newId]]);\n    }\n    function uploadToFirebase() {\n        console.log(\"Starting upload process\");\n        updateLocallyForSelected();\n        console.log(totalData);\n        for (const id in totalData) {\n            updateSingularDocument(id, totalData[id]);\n        }\n\n        setChanges(\"All changes saved\");\n        updateTimestamp();\n        updateFolderTitleServer();\n\n        console.log(\"Hopefully done with upload process\");\n    }\n    async function updateTimestamp() {\n        const updateTimestamp = await updateDoc(mainDocRef, {\n            timestamp: serverTimestamp(),\n        });\n        console.log(\"Timestamp updated\");\n    }\n    function addNewFile() {\n        let copy = totalData;\n        copy[Math.random() * 10000000000] = { name: \"Untitled.FileExtension\", data: \"Copy code here\" };\n        setData({ ...copy });\n        setChanges(\"Save all files\");\n    }\n    function changeFolderTitleNow() {\n        if (!changeFolderTitle) {\n            setChangeFolderTitle(true);\n        } else {\n            updateFolderTitleServer();\n            updateTimestamp();\n\n            setChangeFolderTitle(false);\n        }\n    }\n    async function updateSingularDocument(id, value) {\n        const otherDoc = doc(mainDocRef, \"files\", id);\n        await setDoc(otherDoc, {\n            name: value.name,\n            data: value.data,\n        });\n    }\n    async function updateFolderTitleServer() {\n        await updateDoc(mainDocRef, {\n            name: folderTitle,\n        });\n    }\n    function updateFolderTitle(event) {\n        setFolderTitle(event.target.value);\n    }\n    function copyUrl() {\n        let url = \"https://www.wyattcowley.com/template-manager/#/download/\";\n        url = url + id + \"/\" + user.uid;\n        navigator.clipboard.writeText(url);\n    }\n    return (\n        <>\n            <div className='complete-editor-container'>\n                <div className='sidebar-container'>\n                    <br />\n                    <br />\n\n                    <div className='large-tab-container'>\n                        <div className='folder-title-container'>\n                            <FaFolder style={{ marginLeft: \"1rem\" }}></FaFolder>\n                            {!changeFolderTitle ? <p className='folder-title-actual'>{folderTitle}</p> : <input className='folder-title-actual' onChange={updateFolderTitle} value={folderTitle}></input>}\n                            <button onClick={changeFolderTitleNow}>{!changeFolderTitle ? <MdEdit style={{ marginLeft: \"1rem\" }}></MdEdit> : <FaSave style={{ marginLeft: \"1rem\" }}></FaSave>}</button>\n                        </div>\n                        {Object.keys(totalData).map((item) => (\n                            <button onClick={() => switchSelectedFile(item)} className='tab-button'>\n                                <span style={{ color: item == visibleFile[0] ? \"grey\" : \"black\" }}>{totalData[item].name}</span>\n                            </button>\n                        ))}\n                    </div>\n                    <button onClick={addNewFile} className='tab-button save-button' style={{ marginBottom: \".5rem\" }}>\n                        Add File\n                    </button>\n                    <button onClick={uploadToFirebase} className='tab-button save-button'>\n                        {changesPrompt}\n                    </button>\n                </div>\n                <div className='non-tab-container'>\n                    <DisplayFile name={visibleFile[1].name} data={visibleFile[1].data} onTitleChange={changeTitleForSelected} onDataChange={changeDataForSelected}></DisplayFile>\n                </div>\n            </div>\n            {!loading ? (\n                <div className='downloading-options'>\n                    <button className='download-button'>\n                        {\" \"}\n                        <Link to={\"/download/\" + mainDocRef.id + \"/\" + user.uid} style={{ color: \"white\", textDecoration: \"none\" }}>\n                            Download All Files{\" \"}\n                        </Link>\n                    </button>\n                    <button className='download-button' onClick={copyUrl}>\n                        Copy Download Url\n                    </button>\n                    {/* <button className='download-button'> */}\n                    <DownloadLink label='Download Current File' filename={visibleFile[1].name} exportFile={() => visibleFile[1].data} style={{ color: \"white\", textDecoration: \"none\" }} className='download-button' />\n                    {/* </button> */}\n                </div>\n            ) : (\n                <></>\n            )}\n        </>\n    );\n};\nexport default Edit;\n","import \"../styles/App.css\";\nimport app from \"../firebase.js\";\nimport { HashRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { getAuth } from \"firebase/auth\";\nimport { useEffect } from \"react\";\nimport SignIn from \"../components/SignIn.jsx\";\nimport Navbar from \"../components/NavBar.jsx\";\nimport Dashboard from \"../pages/Dashboard.jsx\";\nimport Download from \"../pages/Download.jsx\";\nimport Create from \"./Create.jsx\";\nimport Edit from \"./Edit.jsx\";\n\nconst auth = getAuth();\nfunction App() {\n    const [user, loading, error] = useAuthState(auth);\n    useEffect(() => {\n        console.log(loading);\n        console.log(user);\n    }, [loading]);\n    return (\n        <Router>\n            <Switch>\n                <Route path='/signin'>\n                    <SignIn></SignIn>\n                </Route>\n                <Route path='/dashboard'>\n                    {!loading && user == undefined ? <Redirect to='signin'></Redirect> : <></>}\n                    <Navbar></Navbar>\n                    <Dashboard></Dashboard>\n                </Route>\n                <Route path='/create'>\n                    <Create user={user}></Create>\n                </Route>\n                <Route path='/edit/:id'>\n                    <Navbar></Navbar>\n                    <Edit></Edit>\n                </Route>\n                <Route path='/download/:id/:userId'>\n                    <Download></Download>\n                </Route>\n                <Route path='/'>{loading ? <h1>Loading...</h1> : user == undefined ? <Redirect to='/signin'></Redirect> : <Redirect to='dashboard'></Redirect>}</Route>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./pages/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}